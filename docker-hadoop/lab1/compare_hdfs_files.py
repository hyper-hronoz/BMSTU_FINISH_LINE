#!/usr/bin/env python
# -*- coding: utf-8 -*-

import subprocess
import sys

def read_hdfs_file(path):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ HDFS —Ñ–∞–π–ª–∞ –∫–∞–∫ —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫"""
    try:
        output = subprocess.check_output(
            ["hdfs", "dfs", "-cat", path],
            stderr=subprocess.STDOUT
        )
        # –í Python 2 output - bytes, –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ utf-8
        if isinstance(output, bytes):
            output = output.decode('utf-8')
        return output.splitlines()
    except subprocess.CalledProcessError:
        print "‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å {}".format(path)
        sys.exit(1)

def main():
    if len(sys.argv) != 3:
        print "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python compare_hdfs_files.py <HDFS_file1> <HDFS_file2>"
        sys.exit(1)

    file1, file2 = sys.argv[1], sys.argv[2]

    print "üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤:\n  1Ô∏è‚É£ {}\n  2Ô∏è‚É£ {}".format(file1, file2)

    lines1 = read_hdfs_file(file1)
    lines2 = read_hdfs_file(file2)

    if lines1 == lines2:
        print "‚úÖ –§–∞–π–ª—ã –∏–¥–µ–Ω—Ç–∏—á–Ω—ã"
    else:
        print "‚ö†Ô∏è  –§–∞–π–ª—ã —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è!\n"
        max_len = max(len(lines1), len(lines2))
        for i in range(max_len):
            line1 = lines1[i] if i < len(lines1) else "<no line>"
            line2 = lines2[i] if i < len(lines2) else "<no line>"
            if line1 != line2:
                print "üî∏ –°—Ç—Ä–æ–∫–∞ {} –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è:\n  File1: {}\n  File2: {}".format(i+1, line1, line2)

if __name__ == "__main__":
    main()

